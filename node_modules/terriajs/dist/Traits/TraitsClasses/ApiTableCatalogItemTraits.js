var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import ApiRequestTraits from "./ApiRequestTraits";
import AutoRefreshingTraits from "./AutoRefreshingTraits";
import CatalogMemberTraits from "./CatalogMemberTraits";
import mixTraits from "../mixTraits";
import objectArrayTrait from "../Decorators/objectArrayTrait";
import primitiveTrait from "../Decorators/primitiveTrait";
import TableTraits from "./TableTraits";
export class ApiTableRequestTraits extends mixTraits(ApiRequestTraits) {
    constructor() {
        super(...arguments);
        this.kind = "PER_ROW";
    }
}
__decorate([
    primitiveTrait({
        name: "Kind",
        type: "string",
        description: "Determines how table rows are constructed from this API.\n" +
            "* PER_ROW: values are specific to a row in the table\n" +
            "* PER_ID: values are the same for all objects with the same id\n"
    })
], ApiTableRequestTraits.prototype, "kind", void 0);
export default class ApiTableCatalogItemTraits extends mixTraits(TableTraits, CatalogMemberTraits, AutoRefreshingTraits, ApiRequestTraits) {
    constructor() {
        super(...arguments);
        this.apis = [];
    }
}
__decorate([
    objectArrayTrait({
        name: "APIs",
        type: ApiTableRequestTraits,
        description: 'The apis to use to retrieve the columns of the table. Note: you **must** define which columns to use from API response in the `columns` `TableColumnTraits` - for example `[{name:"some-key-in-api-response", ...}]`',
        idProperty: "url"
    })
], ApiTableCatalogItemTraits.prototype, "apis", void 0);
__decorate([
    primitiveTrait({
        name: "Id key",
        type: "string",
        description: "The name of the id property shared between all APIs"
    })
], ApiTableCatalogItemTraits.prototype, "idKey", void 0);
//# sourceMappingURL=ApiTableCatalogItemTraits.js.map